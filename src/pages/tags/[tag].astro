---
import BaseLayout from '@/layouts/BaseLayout.astro';
import EntriesOne from '@/components/entries/EntriesOne.astro';
import { getCollection } from 'astro:content';
export async function getStaticPaths() {
  const allPosts = await getCollection('posts');
  const uniqueTags = [...new Set(allPosts.map((post) => post.data.tags).flat())];

  return uniqueTags.map((tag) => {
    const filteredPosts = allPosts.filter((post) => post.data.tags.includes(tag));
    return {
      params: { tag },
      props: { posts: filteredPosts },
    };
  });
}

const { tag } = Astro.params;
const { posts } = Astro.props;
const [firstPost, ...restPosts] = posts;
---

<BaseLayout pageTitle={tag}>
  <section class="mx-auto">
    <a
      href={`/posts/${firstPost.slug}`}
      title={firstPost.data.title}
      class="w-full flex content-center items-center relative"
    >
      <img
        src={firstPost.data.cover}
        alt={firstPost.data.title}
        class="md:max-h-96 w-full h-auto max-h-full object-cover"
      />
      <p
        class="text-gray-50 px-2 mt-2 font-display roboto-regular text-m absolute bottom-0 w-full bg-gray-950 bg-opacity-75"
      >
        {firstPost.data.title}
      </p>
    </a>
    <ul class="grid grid-cols-1 mt-8 gap-1 gap-y-2 gap-x-4 md:grid-cols-3 lg:grid-cols-4 sm:grid-cols-2">
      {
        restPosts.map((post) => (
          <EntriesOne
            url={'/posts/' + post.slug}
            title={post.data.title}
            description={post.data.description}
            alt={post.data.title}
            pubDate={post.data.pubDate.toString().slice(0, 10)}
            author={post.data.author}
            image={post.data.cover}
            tags={post.data.tags}
          />
        ))
      }
    </ul>
  </section>
</BaseLayout>
